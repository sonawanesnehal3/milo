{"version":3,"file":"japanese-word-wrap-e0b93ebd.js","sources":["../../libs/features/japanese-word-wrap.js"],"sourcesContent":["/* eslint-disable no-console */\nimport { getMetadata } from '../utils/utils.js';\n\nconst hasTextNode = (element) => [...element.childNodes]\n  .some(({ nodeType, textContent }) => nodeType === Node.TEXT_NODE && textContent.trim() !== '');\n\nfunction findTextElements(element = document.body) {\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'header' || tagName === 'footer'\n    || element.classList.contains('jpwordwrap-disabled')\n  ) {\n    return [];\n  }\n\n  return Array.from(element.children).reduce((result, child) => (\n    hasTextNode(child)\n      ? [...result, child]\n      : [...result, ...findTextElements(child)]\n  ), []);\n}\n\n/**\n * Update the model to control line breaks occurring for the specified word.\n */\nfunction updateParserModel(parser, pattern, score, markerSymbol = '#') {\n  const markerPos = pattern.indexOf(markerSymbol);\n  if (markerPos === -1) {\n    console.warn('No marker symbol found in the line break pattern string');\n    return;\n  }\n\n  if (markerPos !== pattern.lastIndexOf('#')) {\n    console.warn('Two or more marker symbols cannot be specified. Only the first marker is applied');\n  }\n\n  const former = pattern.slice(Math.max(markerPos - 3, 0), markerPos);\n  const latter = pattern.slice(markerPos + 1, Math.min(markerPos + 4, pattern.length));\n\n  if (former.length < 2 || latter.length < 2) {\n    console.warn('At least two characters must be specified before and after the marker symbol');\n    return;\n  }\n\n  if (former.length === 3) {\n    parser.model.set(`TW1:${former}`, score);\n  } else if (former.length === 2) {\n    parser.model.set(`BW1:${former}`, score);\n  }\n\n  if (latter.length === 3) {\n    parser.model.set(`TW4:${latter}`, score);\n  } else if (latter.length === 2) {\n    parser.model.set(`BW3:${latter}`, score);\n  }\n}\n\nfunction hasFlexOrGrid(element) {\n  const elStyles = getComputedStyle(element);\n\n  return (elStyles.display === 'flex' || elStyles.display === 'grid');\n}\n\nfunction isFirefox() {\n  return navigator.userAgent.includes('Firefox');\n}\n\n/**\n * Check if a word wrap has been applied to an element.\n */\nexport function isWordWrapApplied(element) {\n  return !!element.querySelector('wbr');\n}\n\n/**\n * Check if a balanced word wrap has been applied to an element.\n */\nexport function isBalancedWordWrapApplied(element) {\n  return !!element.querySelector('wbr[class^=jpn-balanced-wbr]');\n}\n\n/**\n * Apply smart line-breaking algorithm depending on the given options.\n */\nexport async function applyJapaneseLineBreaks(config, options = {}) {\n  const { miloLibs, codeRoot } = config;\n  const {\n    scopeArea = document,\n    budouxThres = 2000,\n    bwEnabled = false,\n    budouxExcludeSelector = null,\n    bwExcludeSelector = 'p',\n    lineBreakOkPatterns = [],\n    lineBreakNgPatterns = [],\n  } = options;\n  const base = miloLibs || codeRoot;\n\n  // The thresould value to control word break granularity for long semantic blocks.\n  const { loadDefaultJapaneseParser } = await import(`${base}/deps/budoux-index-ja.min.js`);\n  const parser = loadDefaultJapaneseParser();\n\n  // Find elements that contains a text node directly under its child node.\n  const textElements = findTextElements(\n    scopeArea instanceof Document ? scopeArea.body : scopeArea,\n  );\n  const budouxExcludeElements = new Set();\n  const bwExcludeElements = new Set();\n\n  // Find BudouX disabled elements\n  if (budouxExcludeSelector) {\n    scopeArea.querySelectorAll(budouxExcludeSelector).forEach((el) => {\n      budouxExcludeElements.add(el);\n    });\n  }\n\n  // Find Blanced Word Wrap disabled elements\n  if (bwEnabled && bwExcludeSelector) {\n    scopeArea.querySelectorAll(bwExcludeSelector).forEach((el) => {\n      bwExcludeElements.add(el);\n    });\n  }\n\n  // Update model based on given patterns\n  const SCORE = Number.MAX_VALUE;\n  lineBreakOkPatterns.forEach((p) => {\n    updateParserModel(parser, p, SCORE);\n  });\n  lineBreakNgPatterns.forEach((p) => {\n    updateParserModel(parser, p, -SCORE);\n  });\n\n  // Apply budoux to target selector\n  textElements.forEach((el) => {\n    if (\n      budouxExcludeElements.has(el)\n      || isWordWrapApplied(el)\n      || (isFirefox() && hasFlexOrGrid(el))\n    ) return;\n    parser.applyElement(el, { threshold: budouxThres });\n  });\n\n  if (bwEnabled) {\n    const BalancedWordWrapper = (await import(`${base}/deps/bw2.min.js`)).default;\n    const bw2 = new BalancedWordWrapper();\n    // Apply balanced word wrap to target selector\n    textElements.forEach((el) => {\n      if (\n        bwExcludeElements.has(el)\n        || isBalancedWordWrapApplied(el)\n        || (isFirefox() && hasFlexOrGrid(el))\n      ) return;\n      bw2.applyElement(el);\n    });\n  }\n}\n\n/**\n * Apply smart line-breaking algorithm by inserting <wbr> between semantic blocks.\n * This allows browsers to break japanese sentences correctly.\n */\nexport default async function controlJapaneseLineBreaks(config, scopeArea = document) {\n  const disabled = getMetadata('jpwordwrap:disabled') === 'true' || false;\n  const budouxThres = Number(getMetadata('jpwordwrap:budoux-thres')) || 2000;\n  const budouxExcludeSelector = getMetadata('jpwordwrap:budoux-exclude-selector');\n  const bwEnabled = getMetadata('jpwordwrap:bw-enabled') === 'true' || false;\n  const bwExcludeSelector = getMetadata('jpwordwrap:bw-exclude-selector') || 'p';\n  const lineBreakOkPatterns = (getMetadata('jpwordwrap:line-break-ok') || '').split(',');\n  const lineBreakNgPatterns = (getMetadata('jpwordwrap:line-break-ng') || '').split(',');\n\n  if (disabled) return;\n\n  await applyJapaneseLineBreaks(config, {\n    scopeArea,\n    budouxThres,\n    budouxExcludeSelector,\n    bwEnabled,\n    bwExcludeSelector,\n    lineBreakOkPatterns,\n    lineBreakNgPatterns,\n  });\n}\n"],"names":["controlJapaneseLineBreaks","config","scopeArea","document","disabled","getMetadata","budouxThres","Number","budouxExcludeSelector","bwEnabled","bwExcludeSelector","lineBreakOkPatterns","split","lineBreakNgPatterns","Promise","resolve","applyJapaneseLineBreaks","then","e","reject","options","miloLibs","codeRoot","base","loadDefaultJapaneseParser","parser","textElements","findTextElements","Document","body","budouxExcludeElements","Set","bwExcludeElements","querySelectorAll","forEach","el","add","SCORE","MAX_VALUE","p","updateParserModel","has","isWordWrapApplied","isFirefox","hasFlexOrGrid","applyElement","threshold","_temp","_import","BalancedWordWrapper","default","bw2","isBalancedWordWrapApplied","hasTextNode","element","childNodes","some","nodeType","textContent","Node","TEXT_NODE","trim","tagName","toLowerCase","classList","contains","Array","from","children","reduce","result","child","pattern","score","markerSymbol","markerPos","indexOf","console","warn","lastIndexOf","former","slice","Math","max","latter","min","length","model","set","elStyles","getComputedStyle","display","navigator","userAgent","includes","querySelector"],"mappings":"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"}